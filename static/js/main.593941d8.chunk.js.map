{"version":3,"sources":["images/background.jpg","reducers/todoReducer.js","store.js","components/TodoForm.js","components/EditTodoForm.js","components/Todo.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toggleDone","id","state","todo","todos","find","done","map","t","removeDone","filter","deleteTodo","editTodo","obj","title","store","createStore","action","type","Date","now","payload","connect","undefined","dispatch","addTodo","props","useState","text","setText","noValidate","autoComplete","className","onSubmit","e","preventDefault","TextField","label","style","flexGrow","value","onChange","target","Fab","size","color","marginLeft","disabled","length","onClick","EditTodoForm","edit","setEdit","Grid","key","item","xs","FormControlLabel","control","Checkbox","TodoList","console","log","src","background","container","justify","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.593941d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.260cd5f4.jpg\";","export const todoReducer = (state = {\r\n    todos: []\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD_TODO\":\r\n            return {\r\n                ...state,\r\n                todos: [...state.todos, {id: Date.now(), title: action.payload, done: false}]\r\n            };\r\n        case \"TOGGLE_DONE\":\r\n            return toggleDone(action.payload, state);\r\n        case \"REMOVE_DONE\":\r\n            return removeDone(state);\r\n        case \"DELETE_TODO\":\r\n            return deleteTodo(action.payload, state);\r\n        case \"EDIT_TODO\":\r\n            return editTodo(action.payload, state);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nconst toggleDone = (id, state) => {\r\n    let todo = state.todos.find(todo => todo.id === id);\r\n    todo = {...todo, done: !todo.done};\r\n    let todos = state.todos.map(t => t.id === todo.id ? todo : t);\r\n    return {\r\n        ...state,\r\n        todos\r\n    }\r\n};\r\n\r\nfunction removeDone(state) {\r\n    const todos=state.todos.filter(todo=>!todo.done)\r\n    return {\r\n        ...state,\r\n        todos\r\n    }\r\n}\r\n\r\nconst deleteTodo = (id, state) => {\r\n    const todos = state.todos.filter(todo => todo.id !== id);\r\n    return {\r\n        ...state,\r\n        todos\r\n    }\r\n};\r\n\r\nconst editTodo = (obj, state) => {\r\n    let todo = state.todos.find(todo => todo.id === obj.id);\r\n    todo = {...todo, title:obj.title};\r\n    let todos = state.todos.map(t => t.id === todo.id ? todo : t);\r\n    return {\r\n        ...state,\r\n        todos\r\n    }\r\n};\r\n","import {createStore} from \"redux\";\r\nimport {todoReducer} from \"./reducers/todoReducer\";\r\n\r\nexport const store=createStore(todoReducer);\r\n","import React, {useState} from \"react\";\r\nimport {Fab, TextField} from \"@material-ui/core\";\r\nimport {connect} from 'react-redux';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TodoForm = (props) => {\r\n    const [text, setText] = useState(\"\");\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text == \"\") return;\r\n        props.addTodo(text);\r\n        setText(\"\");\r\n    };\r\n    return (\r\n        <form action=\"\" noValidate autoComplete=\"off\" className=\"add-form\" onSubmit={handleSubmit}>\r\n            <TextField label=\"Todo Title\" style={{flexGrow: 1}} value={text} onChange={(e) => setText(e.target.value)}/>\r\n            <Fab size=\"small\" color=\"primary\" style={{marginLeft: \"10px\"}} type=\"submit\">\r\n                <AddIcon/>\r\n            </Fab>\r\n            <Fab disabled={props.todos.filter(todo=>todo.done).length==0} size=\"small\" color=\"secondary\" style={{marginLeft: \"10px\"}} type=\"submit\" onClick={props.removeDone}>\r\n                <DeleteIcon/>\r\n            </Fab>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTodo: (title) => {\r\n            dispatch({\r\n                type: \"ADD_TODO\",\r\n                payload: title\r\n            });\r\n        },\r\n        removeDone: () => {\r\n            dispatch({\r\n                type: \"REMOVE_DONE\",\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(undefined, mapDispatchToProps)(TodoForm);","import React, {useState} from \"react\";\r\nimport {Fab, TextField} from \"@material-ui/core\";\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst EditTodoForm = ({todo,editTodo}) => {\r\n    const [text, setText] = useState(todo.title);\r\n    let handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text == \"\") return;\r\n        editTodo({id:todo.id,title:text});\r\n    };\r\n    return (\r\n        <form action=\"\" noValidate autoComplete=\"off\" className=\"add-form\" onSubmit={handleSubmit}>\r\n            <TextField label=\"Todo Title\" style={{flexGrow: 1}} value={text} onChange={(e) => setText(e.target.value)}/>\r\n            <Fab size=\"small\" color=\"primary\" style={{marginLeft: \"10px\"}} type=\"submit\">\r\n                <CheckIcon/>\r\n            </Fab>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default EditTodoForm;","import React, {useState} from \"react\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport {connect} from 'react-redux';\r\nimport EditTodoForm from \"./EditTodoForm\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst Todo = ({todo, toggleDone, deleteTodo,editTodo}) => {\r\n    const [edit, setEdit] = useState();\r\n    const handleEditTodo=(obj)=>{\r\n        setEdit(false);\r\n        editTodo(obj)\r\n    };\r\n    return <Grid key={todo.id} item xs={12} className=\"item-flex mt-3\">\r\n        {edit ?\r\n            <EditTodoForm todo={todo} editTodo={handleEditTodo}/>\r\n            :\r\n            <>\r\n                <FormControlLabel\r\n                    control={<Checkbox onChange={() => toggleDone(todo.id)}/>}\r\n                    label={todo.done ? <del>{todo.title}</del> : todo.title}\r\n                    className=\"todo-title\"\r\n                />\r\n                <div className=\"btn-operation\">\r\n                    <Fab size=\"small\" color=\"primary\" style={{marginLeft: \"10px\"}} type=\"submit\" onClick={()=>setEdit(true)}>\r\n                        <EditIcon/>\r\n                    </Fab>\r\n                    <Fab size=\"small\" color=\"secondary\" style={{marginLeft: \"10px\"}} type=\"submit\"\r\n                         onClick={() => deleteTodo(todo.id)}>\r\n                        <DeleteIcon/>\r\n                    </Fab>\r\n                </div>\r\n            </>\r\n        }\r\n    </Grid>\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleDone: (id) => {\r\n            dispatch({\r\n                type: \"TOGGLE_DONE\",\r\n                payload: id\r\n            });\r\n        },\r\n        deleteTodo: (id) => {\r\n            dispatch({\r\n                type: \"DELETE_TODO\",\r\n                payload: id\r\n            });\r\n        },\r\n        editTodo: (obj) => {\r\n            dispatch({\r\n                type: \"EDIT_TODO\",\r\n                payload: obj\r\n            });\r\n        }\r\n    }\r\n}\r\nexport default connect(undefined, mapDispatchToProps)(Todo);","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\n\r\n\r\nconst TodoList = ({todos}) => {\r\n    return <>\r\n        {todos.length == 0 ?\r\n            <h5 className=\"mt-3\">No Todo Found! Add One</h5> :\r\n            todos.map(todo => <Todo todo={todo}/>)\r\n        }\r\n    </>\r\n};\r\n\r\nexport default TodoList;","import React from 'react';\nimport {connect} from 'react-redux';\nimport Grid from '@material-ui/core/Grid';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport background from \"./images/background.jpg\";\n\n\n\n\nfunction App(props) {\n    console.log(props.todos)\n    return (<>\n        <img src={background} className=\"background\"/>\n        <div className=\"container\">\n            <div className=\"todos\">\n                <TodoForm todos={props.todos}/>\n                <hr/>\n                <Grid container justify=\"center\">\n                    <TodoList todos={props.todos}/>\n                </Grid>\n            </div>\n        </div>\n    </>);\n}\n\nconst mapStateToProps=(state)=>{\n    return state;\n};\n\nexport default connect(mapStateToProps,undefined)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {store} from \"./store\";\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport \"./styles/index.scss\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}